dim(irisdataclean)
#samples with petal length greater than or equal to 6.5
cond.Lpetal <- irisdata[Lpetal>=6.5]
irisdataclean <- na.omit(irisdata)
dim(irisdataclean)
attach(irisdataclean)
#samples with petal length greater than or equal to 6.5
cond.Lpetal <- irisdata[Lpetal>=6.5]
#samples with petal length greater than or equal to 6.5
cond.Lpetal <- irisdataclean[Lpetal>=6.5]
#samples with petal length greater than or equal to 6.5
cond.Lpetal <- irisdataclean[Lpetal>=6.5,]
cond.Lpetal
#select iris samples with petal length greater than or equal to 6.5 and sepal width lesser than 3
irisdataclean[Lpetal>=6.5&Wsepal<3]
#select iris samples with petal length greater than or equal to 6.5 and sepal width lesser than 3
irisdataclean[Lpetal>=6.5&Wsepal<3,]
#select iris samples with petal length greater than or equal to 6.5 and sepal width lesser than 3
irisdataclean[Lpetal>=6.5&Wsepal<3,]
#create a table containing only petal and sepal length of Iris setosa
setosa <- irisdataclean[species==setosa,c(Lpetal, Lsepal)]
#create a table containing only petal and sepal length of Iris setosa
setosa <- irisdataclean[species==setosa,c("Lpetal", "Lsepal")]
#create a table containing only petal and sepal length of Iris setosa
setosa <- irisdataclean[species==setosa,c("Lpetal", "Lsepal")]
#create a table containing only petal and sepal length of Iris setosa
setosa <- irisdataclean[species=="setosa",c("Lpetal", "Lsepal")]
setosa
# order() - ascending order
irisdataclean[order(Lpetal),]
# rev() - descending order
# order() - ascending order
irisdataclean[order(Lpetal),]
# rev() - descending order
irisdataclean[rev(Lpetal),]
# order() - ascending order
irisdataclean[order(Lpetal),]
# rev() - descending order
irisdataclean[rev(order(Lpetal)),]
#rbind() - combine 2 or more tables by rows
irisdataclean[species== "setosa",c(1,2)]->setosa
irisdataclean[species== "virginica",c(1,2)]->virginica
rbind(setosa,virginica)
#bind() - combine 2 or more tables by columns
#rbind() - combine 2 or more tables by rows
irisdataclean[species== "setosa",c(1,2,5)]->setosa
irisdataclean[species== "virginica",c(1,2,5)]->virginica
rbind(setosa,virginica)
#bind() - combine 2 or more tables by columns
#rbind() - combine 2 or more tables by rows
irisdataclean[species== "setosa",c(1,2,5)]->setosa
irisdataclean[species== "virginica",c(1,2,5)]->virginica
rbind(setosa,virginica)
#bind() - combine 2 or more tables by columns
irisdata[species=="setosa",c(1,2)]->sepal
irisdata[species=="setosa",c(3,4)]->petal
cbind(sepal,petal)
#rbind() - combine 2 or more tables by rows
irisdataclean[species== "setosa",c(1,2,5)]->setosa
irisdataclean[species== "virginica",c(1,2,5)]->virginica
rbind(setosa,virginica)
#bind() - combine 2 or more tables by columns
irisdata[species=="setosa",c(1,2)]->sepal
irisdata[species=="setosa",c(5,4)]->petal
cbind(sepal,petal)
#rbind() - combine 2 or more tables by rows
irisdataclean[species== "setosa",c(1,2,5)]->setosa
irisdataclean[species== "virginica",c(1,2,5)]->virginica
rbind(setosa,virginica)
#bind() - combine 2 or more tables by columns
irisdata[species=="setosa",c(1,2)]->sepal
irisdata[species=="setosa",c(3,4)]->petal
cbind(sepal,petal)
summary(irisdata)
summary(irisdataclean)
#correct the data types
irisdataclean <- transform(irisdataclean,Lsepal = as.numeric(Lsepal)), Wsepal = as.numeric(Wsepal), Lpetal = as.numeric(Lpetal), Wpetal = as.numeric(Wpetal)
#correct the data types
irisdataclean <- transform(irisdataclean,Lsepal = as.numeric(Lsepal)), Wsepal = as.numeric(Wsepal), Lpetal = as.numeric(Lpetal), Wpetal = as.numeric(Wpetal))
#correct the data types
irisdataclean <- transform(irisdataclean,Lsepal = as.numeric(Lsepal)), Wsepal <- as.numeric(Wsepal), Lpetal = as.numeric(Lpetal), Wpetal = as.numeric(Wpetal))
#correct the data types
Lsepal <- as.numeric(Lsepal)
Wsepal <- as.numeric(Wsepal)
Wpetal <- as.numeric(Wpetal)
Lpetal <- as.numeric(Lpetal)
summary(irisdataclean)
#correct the data types
Lsepal <- as.numeric(Lsepal)
Wsepal <- as.numeric(Wsepal)
Wpetal <- as.numeric(Wpetal)
Lpetal <- as.numeric(Lpetal)
attach(irisdataclean)
summary(irisdataclean)
#correct the data types
Lsepal <- as.numeric(Lsepal)
Wsepal <- as.numeric(Wsepal)
Wpetal <- as.numeric(Wpetal)
Lpetal <- as.numeric(Lpetal)
attach(irisdataclean)
summary(irisdataclean)
#correct the data types
Lsepal <- as.numeric(Lsepal)
Wsepal <- as.numeric(Wsepal)
Wpetal <- as.numeric(Wpetal)
Lpetal <- as.numeric(Lpetal)
summary(irisdataclean)
#correct the data types
Lsepal <- as.numeric(Lsepal)
Wsepal <- as.numeric(Wsepal)
Wpetal <- as.numeric(Wpetal)
Lpetal <- as.numeric(Lpetal)
summary(irisdata)
summary(irisdataclean)
```
typeof(Lsepal)
typeof(Lsepal)
summary(irisdataclean)
#correct the data types
irisdataclean$Lsepal <- as.numeric(irisdataclean$Lsepal)
irisdataclean$Wsepal <- as.numeric(irisdataclean$Wsepal)
irisdataclean$Lpetal <- as.numeric(irisdataclean$Lpetal)
irisdataclean$Wpetal <- as.numeric(irisdataclean$Wpetal)
summary(irisdataclean)
#correct the data types
irisdataclean <- within(irisdataclean, {
Lsepal <- as.numeric(Lsepal)
Wsepal <- as.numeric(Wsepal)
Lpetal <- as.numeric(Lpetal)
Wpetal <- as.numeric(Wpetal)
})
summary(irisdataclean)
#correct the data types
irisdataclean$Lsepal <- as.numeric(irisdataclean$Lsepal)
irisdataclean$Wsepal <- as.numeric(irisdataclean$Wsepal)
irisdataclean$Lpetal <- as.numeric(irisdataclean$Lpetal)
irisdataclean$Wpetal <- as.numeric(irisdataclean$Wpetal)
irisdataclean$species <- as.character(irisdataclean$species)
summary(irisdataclean)
#correct the data types
irisdataclean$Lsepal <- as.numeric(irisdataclean$Lsepal)
irisdataclean$Wsepal <- as.numeric(irisdataclean$Wsepal)
irisdataclean$Lpetal <- as.numeric(irisdataclean$Lpetal)
irisdataclean$Wpetal <- as.numeric(irisdataclean$Wpetal)
irisdataclean$species <- as.vector(irisdataclean$species)
summary(irisdataclean)
#correct the data types
irisdataclean$Lsepal <- as.numeric(irisdataclean$Lsepal)
irisdataclean$Wsepal <- as.numeric(irisdataclean$Wsepal)
irisdataclean$Lpetal <- as.numeric(irisdataclean$Lpetal)
irisdataclean$Wpetal <- as.numeric(irisdataclean$Wpetal)
irisdataclean$species <- as.factor(irisdataclean$species)
summary(irisdataclean)
?as.factor()
quantile(irisdata[,"Lpetal",],25%)
quantile(irisdata[,"Lpetal"],25%)
quantile(irisdataclean[,"Lpetal"],25%)
quantile(irisdataclean[,"Lpetal"],0.25)
quantile(irisdataclean[,"Lpetal"],0.25)
median(irisdataclean[,"Lpetal"])
sd(irisdataclean[,"Lpetal"])
# calculate for each species the mean of the sepal length
tapply(X=Lsepal,INDEX=species, FUN=mean)
# calculate for each species the mean of the sepal length
tapply(X=Lsepal,INDEX=species, FUN=mean)
# calculate for each species the mean of the petal length
tapply(Lsepal, species, mean)
# calculate for each species the mean of the sepal length
tapply(X=Lsepal,INDEX=species, FUN=mean)
# calculate for each species the mean of the petal length
tapply(Lpetal, species, mean)
plot(Lpetal)
plot(Lpetal~Lsepal,main="Petal Length")
plot(Lpetal~Lsepal,main="Petal Length")
plot(Lpetal,axes=FALSE);axis(2)
plot(Lpetal,axes=FALSE);axis(1)
plot(Lpetal,axes=FALSE);axis(2)
plot(Lpetal,axes=FALSE);axis(3)
#axis 2 refers to the x axis
plot(Lpetal,axes=FALSE);axis(4)
#axis 2 refers to the x axis
plot(Lpetal,axes=FALSE);axis(1,2)
#axis 2 refers to the x axis
plot(Lpetal,axes=FALSE);axis()
plot(Lpetal,axes=FALSE);axis(2)
#axis 2 refers to the x axis
plot(Lpetal,axes=FALSE)
# axes=FALSE means that no axes will be drawn by default
axis(2) # Add y-axis
?axis()
plot(Lpetal,axes=FALSE)
# axes=FALSE means that no axes will be drawn by default
axis(2) # Add y-axis, 1 is the x axis
plot(Lpetal, axes = FALSE, xlab="observations", ylab="petal length", ylim=c(0:10))
plot(Lpetal,axes=FALSE)
# axes=FALSE means that no axes will be drawn by default
axis(2) # Add y-axis, 1 is the x axis
plot(Lpetal, axes=FALSE, xlab="observations", ylab="petal length", ylim=c(0:10))
plot(Lpetal,axes=FALSE)
# axes=FALSE means that no axes will be drawn by default
axis(2) # Add y-axis, 1 is the x axis
plot(Lpetal, axes=FALSE, xlab="observations", ylab="petal length", ylim=c(0,10))
axis(1,col="grey",font.axis=2)
axis(2,col="grey",las=2)
plot(Lpetal,axes=FALSE)
# axes=FALSE means that no axes will be drawn by default
axis(2) # Add y-axis, 1 is the x axis
plot(Lpetal, axes=FALSE, xlab="observations", ylab="petal length", ylim=c(0,10))
axis(1,col="grey",font.axis=2)
axis(2,col="grey")
plot(Lpetal,axes=FALSE)
# axes=FALSE means that no axes will be drawn by default
axis(2) # Add y-axis, 1 is the x axis
plot(Lpetal, axes=FALSE, xlab="observations", ylab="petal length", ylim=c(0,10))
axis(1,col="grey",font.axis=2)
axis(2,col="grey",las=2)
plot(Lpetal,axes=FALSE)
# axes=FALSE means that no axes will be drawn by default
axis(2) # Add y-axis, 1 is the x axis
plot(Lpetal, axes=FALSE, xlab="observations", ylab="petal length", ylim=c(0,10))
axis(1,col="grey",font.axis=2)
axis(2,col="grey")
plot(Lpetal,axes=FALSE)
# axes=FALSE means that no axes will be drawn by default
axis(2) # Add y-axis, 1 is the x axis
plot(Lpetal, axes=FALSE, xlab="observations", ylab="petal length", ylim=c(0,10))
axis(1,col="grey",font=2)
axis(2,col="grey",las=2)
?abline
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean)lwd=3)
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=3)
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=2)
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=1
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=1)
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=3)
#lwd is the line width
abline(a=1, b=5, col="red"m lwd=2)
abline(a=1, b=5, col="red", lwd=2)
abline(a=1, b=5, col="red", lwd=2)
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=3)
#lwd is the line width
abline(a=1, b=5, col="red", lwd=2)
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=3)
#lwd is the line width
abline(a=1, b=5, col="red", lwd=2)
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=3)
#lwd is the line width
abline(a=0, b=1, col="red", lwd=2)
setosadata <- irisdataclean[species=="setosa",]
plot(Lpetal~Lsepal, setosadata)
abline(lm(Lpetal~Lsepal, setosadata)) + title(main="Iris setosa")
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=3)
#lwd is the line width
# abline with equation y = b*x+a
abline(a=0, b=1, col="red", lwd=2)
#regression only on the species setosa
setosadata <- irisdataclean[species=="setosa",]
plot(Lpetal~Lsepal, setosadata)
abline(lm(Lpetal~Lsepal, setosadata)) + title(main="Iris setosa")
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=3)
#lwd is the line width
# abline with equation y = b*x+a
abline(a=0, b=1, col="red", lwd=2)
#regression only on the species setosa
setosadata <- irisdataclean[species=="setosa",]
plot(Lpetal~Lsepal, setosadata)
abline(lm(Lpetal~Lsepal, setosadata)) + title(main="Iris setosa")
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata)
points(Lpetal~Lsepal,irisdata[speces=="virginica",], col="red")
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata)
points(Lpetal~Lsepal,irisdata[species=="virginica",], col="red")
points(Lpetal~Lsepal, irisdata[species=="versicolor",], col="green")
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata, xlim=c(4,8), ylim=c(0.7))
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata, xlim=c(4,8), ylim=c(0,7))
points(Lpetal~Lsepal,irisdata[species=="virginica",], col="red")
points(Lpetal~Lsepal, irisdata[species=="versicolor",], col="green")
setosaorder<-setosadata[order(setosadata$Lpetal),]
attach(setosaorder)
plot(Lpetal)
lines(Lpetal,lwd=2)
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata, xlim=c(4,8), ylim=c(0,7))
points(Lpetal~Lsepal,irisdataclean[species=="virginica",], col="red")
points(Lpetal~Lsepal, irisdataclean[species=="versicolor",], col="green")
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata, xlim=c(4,8), ylim=c(0,7))
points(Lpetal~Lsepal,irisdataclean[species=="virginica",], col="red")
points(Lpetal~Lsepal, irisdataclean[species=="versicolor",], col="green")
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata, xlim=c(4,8), ylim=c(0,7))
points(Lpetal~Lsepal,irisdataclean[species=="virginica",], col="red")
points(Lpetal~Lsepal, irisdataclean[species=="versicolor",], col="green")
dim(irisdataclean)
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=3)
#lwd is the line width
# abline with equation y = b*x+a
abline(a=0, b=1, col="red", lwd=2)
#regression only on the species setosa
setosadata <- irisdataclean[species=="setosa",]
plot(Lpetal~Lsepal, setosadata)
abline(lm(Lpetal~Lsepal, setosadata)) + title(main="Iris setosa")
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata, xlim=c(4,8), ylim=c(0,7))
points(Lpetal~Lsepal,irisdataclean[species=="virginica",], col="red")
points(Lpetal~Lsepal, irisdataclean[species=="versicolor",], col="green")
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata, xlim=c(4,8), ylim=c(0,7))
points(Lpetal~Lsepal,irisdataclean[species=="virginica",], col="red")
points(Lpetal~Lsepal, irisdataclean[species=="versicolor",], col="green")
setosaorder<-setosadata[order(setosadata$Lpetal),]
attach(setosaorder)
plot(Lpetal)
lines(Lpetal,lwd=2)
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata, xlim=c(4,8), ylim=c(0,7))
points(Lpetal~Lsepal,irisdataclean[species=="virginica",], col="red")
points(Lpetal~Lsepal, irisdataclean[species=="versicolor",], col="green")
setosaorder<-setosadata[order(setosadata$Lpetal),]
attach(setosaorder)
plot(Lpetal)
lines(Lpetal,lwd=2)
hist( setosadata$Lpetal,breaks=5)
hist(setosadata$Lpetal,breaks=c(1,1.2,1.4,1.6,1.8,2))
hist( setosadata$Lpetal,breaks=5)
hist(setosadata$Lpetal,breaks=c(1,1.2,1.4,1.6,1.8,2))
hist(setosadata$Lpetal,breaks=5)
hist(setosadata$Lpetal,breaks=c(1,1.2,1.4,1.6,1.8,2))
hist(setosadata$Lpetal,breaks=5)
hist(setosadata$Lpetal,breaks=c(1,1.2,1.4,1.6,1.8,2))
head(irisdataclean)
order(irisdataclean)
knitr::opts_chunk$set(echo = TRUE)
install.packages("ade4")
library("ade4")
pi # pi value
trunc(pi) # return the truncating value
ceiling(pi) # return the smallest integers not less than the numeric argument
floor (pi)  # return the largest integers not greater than the numeric argument
round(pi,2) # round the value in its first argument to the specified number of decimal places
c(1,2,3,4,5) # vector containing 5 integers
Temp <- c(15,18,23,19,24)
Temp
Far <- (Temp*(9/5))+32
mean(Far)
c(1,2,3,4,5) # vector containing 5 integers
Temp <- c(15,18,23,19,24)
Temp
Far <- (Temp*(9/5))+32
mean(Far)
4:19 # generate a vector containing the sequence of all integers between
seq(from=0, to=12, by=2) # regular sequence with beginning, end, step size
rep(c(12,35,48),each=2,time = 2) # repeated sequence, specify the number of times each element is repeated (argument each) and the number of times the sequence is repeated (argument times).
mat<-matrix(1:9, ncol=3, byrow=FALSE)
mat
#set column and row names
colnames(mat)<- c("a","b","c")
rownames(mat)<- c("q","r","s")
mat
mat[1,2] #extract values
#extract rows or columns
mat[1,]
mat[,1]
#extract the 2nd and 3rd row and the 1st and 2nd column
mat[c(2:3),c(1:2)]
#replace a value of the matrix
mat[1,2]<- 35; mat
# remove a value, a row, a column or a subsection of the array
mat2 <- mat[-1,]; mat2
#make an operation on a row, a column or a subsection of the matrix
#calculate the mean of the 3rd column without considering the value of the 2nd row
mean(mat[-2,3])
# extract (1) all values lesser than or equal to 3 and (2) all values strictly lesser than 9 and greater than or equal to 7
mat[mat<=3]
mat[mat<9&mat>=7]
#replace by 50 the values lower than or equal to 3
mat[mat<=3] <- 50; mat
data = data.frame(letter=c("a","b","c","d","e","f"), order = seq(from=2, to=12, by=2), type = c("fries","burger","fish", "squid", "kebab", "spaghetti"))
data
help.search("Fisher")
help.start()
#search with keywords
?fisher.test()
irisdata<- read.table("irisdata.txt", header=TRUE,row.names=1,dec=",")
names(irisdata) #columns
head(irisdata) #first 6 lines
dim(irisdata) #number of line, column number
irisdata[,3] #3rd column
#or using the syntax dataframe_name$variable_name
irisdata$Petal.Length
attach(irisdata)
Petal.Length
Sepal.Width
colnames(irisdata)<-c("Lsepal", "Wsepal", "Lpetal", "Wpetal", "species")
head(irisdata)
irisdataclean <- na.omit(irisdata)
dim(irisdataclean)
attach(irisdataclean)
#samples with petal length greater than or equal to 6.5
#you want to get the samples/rows that is why it is [n,]
#cond is just a variable name
cond.Lpetal <- irisdataclean[Lpetal>=6.5,]
cond.Lpetal
#select iris samples with petal length greater than or equal to 6.5 and sepal width lesser than 3
#don't forget the ,
irisdataclean[Lpetal>=6.5&Wsepal<3,]
#create a table containing only petal and sepal length of Iris setosa
setosa <- irisdataclean[species=="setosa",c("Lpetal", "Lsepal")]
setosa
# order() - ascending order
irisdataclean[order(Lpetal),]
# rev() - descending order
irisdataclean[rev(order(Lpetal)),]
#rbind() - combine 2 or more tables by rows
irisdataclean[species== "setosa",c(1,2,5)]->setosa
irisdataclean[species== "virginica",c(1,2,5)]->virginica
rbind(setosa,virginica)
#bind() - combine 2 or more tables by columns
irisdata[species=="setosa",c(1,2)]->sepal
irisdata[species=="setosa",c(3,4)]->petal
cbind(sepal,petal)
#correct the data types first
irisdataclean$Lsepal <- as.numeric(irisdataclean$Lsepal)
irisdataclean$Wsepal <- as.numeric(irisdataclean$Wsepal)
irisdataclean$Lpetal <- as.numeric(irisdataclean$Lpetal)
irisdataclean$Wpetal <- as.numeric(irisdataclean$Wpetal)
irisdataclean$species <- as.factor(irisdataclean$species)
summary(irisdataclean)
quantile(irisdataclean[,"Lpetal"],0.25)
median(irisdataclean[,"Lpetal"])
sd(irisdataclean[,"Lpetal"])
# calculate for each species the mean of the sepal length
tapply(X=Lsepal,INDEX=species, FUN=mean)
# calculate for each species the mean of the petal length
tapply(Lpetal, species, mean)
plot(Lpetal)
plot(Lpetal~Lsepal,main="Petal Length")
plot(Lpetal,axes=FALSE)
# axes=FALSE means that no axes will be drawn by default
axis(2) # Add y-axis, 1 is the x axis
plot(Lpetal, axes=FALSE, xlab="observations", ylab="petal length", ylim=c(0,10))
axis(1,col="grey",font.axis=2)
axis(2,col="grey",las=2)
plot(Lpetal~Lsepal)
abline(lm(Lpetal~Lsepal,irisdataclean),lwd=3)
#lwd is the line width
# abline with equation y = b*x+a
abline(a=0, b=1, col="red", lwd=2)
#regression only on the species setosa
setosadata <- irisdataclean[species=="setosa",]
plot(Lpetal~Lsepal, setosadata)
abline(lm(Lpetal~Lsepal, setosadata)) + title(main="Iris setosa")
# make a graph for Iris setosa, then add the 2 other species with different colors
plot(Lpetal~Lsepal,setosadata, xlim=c(4,8), ylim=c(0,7))
points(Lpetal~Lsepal,irisdataclean[species=="virginica",], col="red")
points(Lpetal~Lsepal, irisdataclean[species=="versicolor",], col="green")
setosaorder<-setosadata[order(setosadata$Lpetal),]
attach(setosaorder)
plot(Lpetal)
lines(Lpetal,lwd=2)
hist(setosadata$Lpetal,breaks=5)
hist(setosadata$Lpetal,breaks=c(1,1.2,1.4,1.6,1.8,2))
order()
knitr::opts_chunk$set(echo = TRUE)
hist(setosadata$Lpetal,breaks=c(1,1.2,1.4,1.6,1.8,2))
hist(setosadata$Lpetal,breaks=5,axes=FALSE,main="petal
length",col="grey"); axis(1,col.axis="grey")
boxplot(irisdata$Lpetal, main="Petal Length")
boxplot(irisdataclean$Lpetal, main="Petal Length")
boxplot(irisdataclean$Lpetal, main="Petal Length")
#with different variables
boxplot(Lpetal, Wpetal, Lsepal, Wsepal, main="Iris boxplot", names=c("length petal", "width petal", "length sepal", "widthsepal"))
boxplot(irisdataclean$Lpetal, main="Petal Length")
#with different variables
boxplot(Lpetal, Wpetal, Lsepal, Wsepal, main="Iris boxplot", names=c("length petal", "width petal", "length sepal", "widthsepal"))
#by species
boxplot(Lpetal~species, main="petal length", names=c("I. setosa","I. diversicolor", "I. virginica"))
boxplot(irisdataclean$Lpetal, main="Petal Length")
#with different variables
boxplot(Lpetal, Wpetal, Lsepal, Wsepal, main="Iris boxplot", names=c("length petal", "width petal", "length sepal", "widthsepal"))
#by species
boxplot(Lpetal~Species, main="petal length", names=c("I. setosa","I. diversicolor", "I. virginica"))
boxplot(irisdataclean$Lpetal, main="Petal Length")
#with different variables
boxplot(Lpetal, Wpetal, Lsepal, Wsepal, main="Iris boxplot", names=c("length petal", "width petal", "length sepal", "widthsepal"))
#by species
boxplot(irisdata$Lpetal~irisdata$Species, main="petal length", names=c("I. setosa","I. diversicolor", "I. virginica"))
boxplot(irisdataclean$Lpetal, main="Petal Length")
#with different variables
boxplot(Lpetal, Wpetal, Lsepal, Wsepal, main="Iris boxplot", names=c("length petal", "width petal", "length sepal", "widthsepal"))
#by species
boxplot(irisdata$Lpetal~irisdata$species, main="petal length", names=c("I. setosa","I. diversicolor", "I. virginica"))
boxplot(irisdataclean$Lpetal, main="Petal Length")
#with different variables
boxplot(Lpetal, Wpetal, Lsepal, Wsepal, main="Iris boxplot", names=c("length petal", "width petal", "length sepal", "widthsepal"))
#by species
boxplot(irisdataclean$Lpetal~irisdataclean$species, main="petal length", names=c("I. setosa","I. diversicolor", "I. virginica"))
